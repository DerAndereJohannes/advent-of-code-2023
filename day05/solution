#!/usr/bin/env bash

# part 1
awk '
function get_value(src, lower, range, tar) {if(lower <= src && src < lower+range){return tar+(src-lower)} else {return src}}
function get_next(lower, range, tar, old_array, new_array){for(s in old_array){if(new_array[s] == "" || new_array[s] == old_array[s]){new_array[s] = get_value(old_array[s], lower, range, tar)}}}
/seeds:/ {for(i=2;i<=NF;i++){seeds[i]=$i}} 
/seed-to-soil/,/^$/ {if($1 ~ /[0-9]+/)get_next($2,$3,$1, seeds, seedsoil)}
/soil-to-fertilizer/,/^$/ {if($1 ~ /[0-9]+/)get_next($2,$3,$1, seedsoil, soilfert)}
/fertilizer-to-water/,/^$/ {if($1 ~ /[0-9]+/)get_next($2,$3,$1, soilfert, fertwater)}
/water-to-light/,/^$/ {if($1 ~ /[0-9]+/)get_next($2,$3,$1, fertwater, waterlight)}
/light-to-temperature/,/^$/ {if($1 ~ /[0-9]+/)get_next($2,$3,$1, waterlight, lighttemp)}
/temperature-to-humidity/,/^$/ {if($1 ~ /[0-9]+/)get_next($2,$3,$1, lighttemp, temphum)}
/humidity-to-location/,/^$/ {if($1 ~ /[0-9]+/)get_next($2,$3,$1, temphum, humloc)}
END {for(s in seeds){print humloc[s]}}' day5.txt | sort -n | head -n1

# part 2
worst_mistake() {
    read -r src target range <<<$(echo "$1")
    awk -v insrc="$src" -v intarget="$target" -v inrange="$range" '
    function get_value(src, lower, range, tar) {if(lower <= src && src < lower+range){return tar+(src-lower)} else {return src}}
    function get_next(value, converter){new_value=value;for(s in converter){if(new_value == value){split(converter[s], conversion, " ");new_value = get_value(value, conversion[1], conversion[2], s);}}return new_value;}
    function is_seed(seed){for(s in seeds){split(seeds[s], sr, " ");  if(sr[1] <= seed && seed < sr[1]+sr[2]){return 1}};return 0}
    function location_exists(hum){temp=get_next(hum, humtemp);if(temp == -1){return 0};light=get_next(temp,templight);if(light == -1){return 0};water=get_next(light, lightwater);if(water == -1){return 0};fert=get_next(water, waterfert);if(fert == -1){return 0};soil=get_next(fert, fertsoil);if(soil == -1){return 0};seed=get_next(soil, soilseed); if(is_seed(seed)){return 1;}}
    /seeds:/ {for(i=2;i<=NF;i+=2){seeds[i]=$i" "$(i+1)}} 
    /seed-to-soil/,/^$/ {if($1 ~ /[0-9]+/)soilseed[$2] = $1" "$3}
    /soil-to-fertilizer/,/^$/ {if($1 ~ /[0-9]+/)fertsoil[$2] = $1" "$3}
    /fertilizer-to-water/,/^$/ {if($1 ~ /[0-9]+/)waterfert[$2] = $1" "$3}
    /water-to-light/,/^$/ {if($1 ~ /[0-9]+/)lightwater[$2] = $1" "$3}
    /light-to-temperature/,/^$/ {if($1 ~ /[0-9]+/)templight[$2] = $1" "$3}
    /temperature-to-humidity/,/^$/ {if($1 ~ /[0-9]+/)humtemp[$2] = $1" "$3}
    END {for(i=0;i<inrange;i++){if(location_exists(insrc+i)){print intarget+i;break;}}}' day5.txt
}

export -f worst_mistake

awk '/humidity-to-location/,/^$/ {if($1 ~ /[0-9]+/){print $2, $1, $3;}}' day5.txt | sort -n -k2 | xargs -P $(nproc) -I {} bash -c 'worst_mistake "$1"' _ {}

